//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WcfClient.hostServices {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Customer", Namespace="http://schemas.datacontract.org/2004/07/SelfHostinApp")]
    [System.SerializableAttribute()]
    public partial class Customer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BillAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime BillDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustomerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CustomerPhoneField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BillAmount {
            get {
                return this.BillAmountField;
            }
            set {
                if ((this.BillAmountField.Equals(value) != true)) {
                    this.BillAmountField = value;
                    this.RaisePropertyChanged("BillAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime BillDate {
            get {
                return this.BillDateField;
            }
            set {
                if ((this.BillDateField.Equals(value) != true)) {
                    this.BillDateField = value;
                    this.RaisePropertyChanged("BillDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustomerID {
            get {
                return this.CustomerIDField;
            }
            set {
                if ((this.CustomerIDField.Equals(value) != true)) {
                    this.CustomerIDField = value;
                    this.RaisePropertyChanged("CustomerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerName {
            get {
                return this.CustomerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerNameField, value) != true)) {
                    this.CustomerNameField = value;
                    this.RaisePropertyChanged("CustomerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CustomerPhone {
            get {
                return this.CustomerPhoneField;
            }
            set {
                if ((this.CustomerPhoneField.Equals(value) != true)) {
                    this.CustomerPhoneField = value;
                    this.RaisePropertyChanged("CustomerPhone");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="hostServices.ICustomerService")]
    public interface ICustomerService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/GetAllCustomers", ReplyAction="http://tempuri.org/ICustomerService/GetAllCustomersResponse")]
        WcfClient.hostServices.Customer[] GetAllCustomers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/GetAllCustomers", ReplyAction="http://tempuri.org/ICustomerService/GetAllCustomersResponse")]
        System.Threading.Tasks.Task<WcfClient.hostServices.Customer[]> GetAllCustomersAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICustomerServiceChannel : WcfClient.hostServices.ICustomerService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CustomerServiceClient : System.ServiceModel.ClientBase<WcfClient.hostServices.ICustomerService>, WcfClient.hostServices.ICustomerService {
        
        public CustomerServiceClient() {
        }
        
        public CustomerServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CustomerServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CustomerServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CustomerServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WcfClient.hostServices.Customer[] GetAllCustomers() {
            return base.Channel.GetAllCustomers();
        }
        
        public System.Threading.Tasks.Task<WcfClient.hostServices.Customer[]> GetAllCustomersAsync() {
            return base.Channel.GetAllCustomersAsync();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="hostServices.IInternalCustomerService")]
    public interface IInternalCustomerService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInternalCustomerService/RegisterCustomer", ReplyAction="http://tempuri.org/IInternalCustomerService/RegisterCustomerResponse")]
        void RegisterCustomer(WcfClient.hostServices.Customer cst);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInternalCustomerService/RegisterCustomer", ReplyAction="http://tempuri.org/IInternalCustomerService/RegisterCustomerResponse")]
        System.Threading.Tasks.Task RegisterCustomerAsync(WcfClient.hostServices.Customer cst);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInternalCustomerService/UpdateCustomer", ReplyAction="http://tempuri.org/IInternalCustomerService/UpdateCustomerResponse")]
        void UpdateCustomer(WcfClient.hostServices.Customer cst);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInternalCustomerService/UpdateCustomer", ReplyAction="http://tempuri.org/IInternalCustomerService/UpdateCustomerResponse")]
        System.Threading.Tasks.Task UpdateCustomerAsync(WcfClient.hostServices.Customer cst);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInternalCustomerService/DeleteCustomer", ReplyAction="http://tempuri.org/IInternalCustomerService/DeleteCustomerResponse")]
        void DeleteCustomer(int cstID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInternalCustomerService/DeleteCustomer", ReplyAction="http://tempuri.org/IInternalCustomerService/DeleteCustomerResponse")]
        System.Threading.Tasks.Task DeleteCustomerAsync(int cstID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IInternalCustomerServiceChannel : WcfClient.hostServices.IInternalCustomerService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InternalCustomerServiceClient : System.ServiceModel.ClientBase<WcfClient.hostServices.IInternalCustomerService>, WcfClient.hostServices.IInternalCustomerService {
        
        public InternalCustomerServiceClient() {
        }
        
        public InternalCustomerServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public InternalCustomerServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public InternalCustomerServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public InternalCustomerServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void RegisterCustomer(WcfClient.hostServices.Customer cst) {
            base.Channel.RegisterCustomer(cst);
        }
        
        public System.Threading.Tasks.Task RegisterCustomerAsync(WcfClient.hostServices.Customer cst) {
            return base.Channel.RegisterCustomerAsync(cst);
        }
        
        public void UpdateCustomer(WcfClient.hostServices.Customer cst) {
            base.Channel.UpdateCustomer(cst);
        }
        
        public System.Threading.Tasks.Task UpdateCustomerAsync(WcfClient.hostServices.Customer cst) {
            return base.Channel.UpdateCustomerAsync(cst);
        }
        
        public void DeleteCustomer(int cstID) {
            base.Channel.DeleteCustomer(cstID);
        }
        
        public System.Threading.Tasks.Task DeleteCustomerAsync(int cstID) {
            return base.Channel.DeleteCustomerAsync(cstID);
        }
    }
}
