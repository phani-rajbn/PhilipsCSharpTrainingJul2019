//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WcfClient.myWinServices {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Employee", Namespace="http://schemas.datacontract.org/2004/07/WcfWinService")]
    [System.SerializableAttribute()]
    public partial class Employee : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmpAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EmpIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmpNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EmpSalaryField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmpAddress {
            get {
                return this.EmpAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.EmpAddressField, value) != true)) {
                    this.EmpAddressField = value;
                    this.RaisePropertyChanged("EmpAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EmpID {
            get {
                return this.EmpIDField;
            }
            set {
                if ((this.EmpIDField.Equals(value) != true)) {
                    this.EmpIDField = value;
                    this.RaisePropertyChanged("EmpID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmpName {
            get {
                return this.EmpNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EmpNameField, value) != true)) {
                    this.EmpNameField = value;
                    this.RaisePropertyChanged("EmpName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EmpSalary {
            get {
                return this.EmpSalaryField;
            }
            set {
                if ((this.EmpSalaryField.Equals(value) != true)) {
                    this.EmpSalaryField = value;
                    this.RaisePropertyChanged("EmpSalary");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="myWinServices.IDataComponent")]
    public interface IDataComponent {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataComponent/AddNewEmployee", ReplyAction="http://tempuri.org/IDataComponent/AddNewEmployeeResponse")]
        void AddNewEmployee(WcfClient.myWinServices.Employee emp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataComponent/AddNewEmployee", ReplyAction="http://tempuri.org/IDataComponent/AddNewEmployeeResponse")]
        System.Threading.Tasks.Task AddNewEmployeeAsync(WcfClient.myWinServices.Employee emp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataComponent/UpdateEmployee", ReplyAction="http://tempuri.org/IDataComponent/UpdateEmployeeResponse")]
        void UpdateEmployee(WcfClient.myWinServices.Employee emp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataComponent/UpdateEmployee", ReplyAction="http://tempuri.org/IDataComponent/UpdateEmployeeResponse")]
        System.Threading.Tasks.Task UpdateEmployeeAsync(WcfClient.myWinServices.Employee emp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataComponent/DeleteEmployee", ReplyAction="http://tempuri.org/IDataComponent/DeleteEmployeeResponse")]
        void DeleteEmployee(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataComponent/DeleteEmployee", ReplyAction="http://tempuri.org/IDataComponent/DeleteEmployeeResponse")]
        System.Threading.Tasks.Task DeleteEmployeeAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataComponent/GetEmployees", ReplyAction="http://tempuri.org/IDataComponent/GetEmployeesResponse")]
        WcfClient.myWinServices.Employee[] GetEmployees();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataComponent/GetEmployees", ReplyAction="http://tempuri.org/IDataComponent/GetEmployeesResponse")]
        System.Threading.Tasks.Task<WcfClient.myWinServices.Employee[]> GetEmployeesAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDataComponentChannel : WcfClient.myWinServices.IDataComponent, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DataComponentClient : System.ServiceModel.ClientBase<WcfClient.myWinServices.IDataComponent>, WcfClient.myWinServices.IDataComponent {
        
        public DataComponentClient() {
        }
        
        public DataComponentClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DataComponentClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataComponentClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataComponentClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void AddNewEmployee(WcfClient.myWinServices.Employee emp) {
            base.Channel.AddNewEmployee(emp);
        }
        
        public System.Threading.Tasks.Task AddNewEmployeeAsync(WcfClient.myWinServices.Employee emp) {
            return base.Channel.AddNewEmployeeAsync(emp);
        }
        
        public void UpdateEmployee(WcfClient.myWinServices.Employee emp) {
            base.Channel.UpdateEmployee(emp);
        }
        
        public System.Threading.Tasks.Task UpdateEmployeeAsync(WcfClient.myWinServices.Employee emp) {
            return base.Channel.UpdateEmployeeAsync(emp);
        }
        
        public void DeleteEmployee(int id) {
            base.Channel.DeleteEmployee(id);
        }
        
        public System.Threading.Tasks.Task DeleteEmployeeAsync(int id) {
            return base.Channel.DeleteEmployeeAsync(id);
        }
        
        public WcfClient.myWinServices.Employee[] GetEmployees() {
            return base.Channel.GetEmployees();
        }
        
        public System.Threading.Tasks.Task<WcfClient.myWinServices.Employee[]> GetEmployeesAsync() {
            return base.Channel.GetEmployeesAsync();
        }
    }
}
